http://162.55.220.72:5005/object_info_3?name=john&age=30&salary=1000

Method: GET

{
    "age": "30",
    "family": {
        "children": [
            [
                "Alex",
                24
            ],
            [
                "Kate",
                12
            ]
        ],
        "pets": {
            "cat": {
                "age": 3,
                "name": "Sunny"
            },
            "dog": {
                "age": 4,
                "name": "Luky"
            }
        },
        "u_salary_1_5_year": 4000
    },
    "name": "john",
    "salary": 1000
}


Params:

name john
age 30
salary 1000


// Статус код 200
pm.test("Status code is 200", function () {
pm.response.to.have.status(200);
});

var jsonData = pm.response.json();  // Спарсить response body в json
var req = request.data              // Спарсить request
console.log(jsonData)

// Проверить, что name в ответе равно name s request (name забрать из request.)
pm.test("name в ответе равно name s request ", function () {
// var jsonData = pm.response.json();
pm.expect(+jsonData.name).to.eql(+req.name);
});

console.log(jsonData.family)  //вывести в консоль параметр family из response

// Проверить, что у параметра dog есть параметры name
pm.test('Проверить_что_у_параметра_dog_есть_параметры_name', function() {
pm.expect(jsonData.family.pets.dog).to.have.property('name');
});

// Проверить, что параметр name имеет значение Luky
pm.test("name_have_value_luky", function () {
pm.expect(jsonData.family.pets.dog.name).to.eql("Luky");
});

// Проверить, что параметр age имеет значение 4
pm.test("value 4", function () {
pm.expect(jsonData.family.pets.dog.age).to.eql(4);
});

